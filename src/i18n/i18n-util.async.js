// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
// @ts-check
/* eslint-disable */

/**
 * @typedef { import('./i18n-types').Locales } Locales,
 * @typedef { import('./i18n-types').Translation } Translation
 */

import { initFormatters } from './formatters'

import { loadedFormatters, loadedLocales, locales } from './i18n-util'

const localeTranslationLoaders = {
	de: () => import('./de'),
	en: () => import('./en'),
	it: () => import('./it'),
}

/**
 * @param { Locales } locale
 * @return { Promise<Translation> }
 */
export const loadLocaleAsync = async (locale) => {
	if (loadedLocales[locale]) return

	loadedLocales[locale] = (await (localeTranslationLoaders[locale])()).default
	loadFormatters(locale)
}

export const loadAllLocalesAsync = () => Promise.all(locales.map(loadLocaleAsync))

export const loadFormatters = (locale) =>
	loadedFormatters[locale] = initFormatters(locale)
